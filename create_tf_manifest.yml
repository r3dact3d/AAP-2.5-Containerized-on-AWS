---
- name: Create Terraform manifests and components
  hosts: localhost
  connection: local
  collections:
   - cloud.terraform  
  vars_files:
    - vars_of_doom.yml
  tasks:
     - name: Clone Terraform Manifests and build repo
       ansible.builtin.git:
        repo: "http://gitea:3000/student/terraform_builds.git"
        dest: /tmp/srv
        clone: yes
     - name: Create Terraform project 
       ansible.builtin.file:
        path: /{{ working_dir }}/{{ instruqt_tf_build }}
        state: directory
        mode: '755'
     - name: Create cloud-init for Terraform manifest
       ansible.builtin.copy:
        src: cloud-init.conf
        dest: /{{ working_dir }}/{{ instruqt_tf_build }}/cloud-init.conf
     - name: Create main Terraform manifest
       template:
        src: main.j2
        dest: /{{ working_dir }}/{{ instruqt_tf_build }}/main.tf
     - name: Create variable Terraform manifest
       template:
        src: variables.j2
        dest: /{{ working_dir }}/{{ instruqt_tf_build }}/variables.tf 
#### Terraform Deploy
     - name: Create gitignore for Terraform working files
       ansible.builtin.copy:
        dest: /{{ working_dir }}/{{ instruqt_tf_build }}/.gitignore
        content: |
          .terraform
          .terraform.lock.hcl          
     - name: Creating Terraform IoC
       block:
         - name: Initialize Terraform Provider
           cloud.terraform.terraform:
            project_path: /{{ working_dir }}/{{ instruqt_tf_build }}
            state: present
            force_init: true
           register: deployed_tf
     - name: Allowing AWS time to spin up instance
       ansible.builtin.pause:
        minutes: 1
     - name: Configure git to store credentials
       community.general.git_config:
        name: credential.helper
        scope: global
        value: store --file /tmp/git-creds
     - name: Configure repo dir as git safe dir
       community.general.git_config:
        name: safe.directory
        scope: global
        value: "/tmp/terraform_builds"
     - name: Store repo credentials in git-creds file
       ansible.builtin.copy:
        dest: /tmp/git-creds
        mode: 0644
        content: "http://{{ student_user }}:{{ student_password }}@{{ 'gitea:3000' | urlencode }}"
     - name: Configure Git details
       shell: git config --global user.name "student" && git config --global user.email "student@acme.com"
     - name: Update Terraform build repo
       ignore_errors: true 
       shell: git add {{ instruqt_tf_build }} && git commit -m "Adding Terraform Build" && git push
       args:
         chdir: /tmp/srv
       tags:
         - sync
     - name: Updating Terraform Build list 
       block:  
        - name:
          command: "ls {{ working_dir }}"
          register: dir_out
        - debug: var={{item}}
          with_items: dir_out.stdout_lines
        - name: Creating Survey spec
          template:
            src: "{{ survey_j2 }}"
            dest: "{{ working_dir }}/{{ survey_file }}"
        - name: Formating list
          register: slurpfile
          slurp:
             src: "{{ working_dir }}/{{ survey_file }}"
        - name: Encoding Survey list
          debug:
            var: slurpfile['content'] | b64decode
          no_log: true  
        - name: Creating Workflow with Survey
          awx.awx.workflow_job_template:
            name: "Remove Terraform Manifest"
            organization: "ACME Corp"
            state: present
            tower_config_file: "controller.cfg"
            inventory: "ACME AWS"
            survey: "{{ slurpfile['content'] | b64decode }}"
            survey_enabled: true
          no_log: true 