---
- name: Removing Instance and Terraform Build
  hosts: localhost
  connection: local
  collections:
   - cloud.terraform
  vars_files:
    - vars_of_doom.yml
  tasks:
    - name: Clone Terraform Manifests and build repo
      ansible.builtin.git:
        repo: "http://gitea:3000/student/terraform_builds.git"
        dest: /tmp/srv
        clone: yes
    - name: Destroy IaC
      block:
        - name: Initialize Terraform Provider
          cloud.terraform.terraform:
            project_path: /{{ working_dir }}/{{  instruqt_tf_build }}
            state: absent
            force_init: true
        - name: Destroy Terraform Instance
          cloud.terraform.terraform:
            project_path: /{{ working_dir }}/{{ instruqt_tf_build }}
            state: absent
    - name: Configure git to store credentials
      community.general.git_config:
        name: credential.helper
        scope: global
        value: store --file /tmp/git-creds
    - name: Configure repo dir as git safe dir
      community.general.git_config:
        name: safe.directory
        scope: global
        value: "/tmp/terraform_builds"
    - name: Store repo credentials in git-creds file
      ansible.builtin.copy:
       dest: /tmp/git-creds
       mode: 0644
       content: "http://{{ student_user }}:{{ student_password }}@{{ 'gitea:3000' | urlencode }}"
    - name: Configure Git details
      shell: git config --global user.name "student.acme" && git config --global user.email "student@acme.com"
    - name: Remove Terraform files and update Git
      ignore_errors: true
      shell: git rm -r --cached {{ instruqt_tf_build }} && git commit -m "Cleaning Terraform Build" && git push
      args:
        chdir: /tmp/srv
    - name: Remove local cached files
      ansible.builtin.file:
        path: "{{ working_dir }}/{{ instruqt_tf_build }}"
        state: absent
    - name: Updating Terraform Build list
      block:
        - name:
          command: "ls {{ working_dir }}"
          register: dir_out
        - debug: var={{item}}
          with_items: dir_out.stdout_lines
        - name: Creating Survey spec
          template:
            src: "{{ survey_j2 }}"
            dest: "{{ working_dir }}/{{ survey_file }}"
        - name: Ensure survey file is loaded in memory
          register: slurpfile
          slurp:
             src: "{{ working_dir }}/{{ survey_file }}"
        - name: Ensure survey is slurped for base64 encoding
          debug:
            var: slurpfile['content'] | b64decode
          no_log: true
        - name: Updating Workflow with Survey
          awx.awx.workflow_job_template:
            name: "Remove Terraform Manifest"
            organization: "ACME Corp"
            state: present
            tower_config_file: "controller.cfg"
            inventory: "ACME AWS"
            survey: "{{ slurpfile['content'] | b64decode }}"
            survey_enabled: true
          no_log: true
